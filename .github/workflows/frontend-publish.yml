name: Frontend-Publish

on:
  workflow_dispatch:
    inputs:
      tag_frontend:
        type: string
        description: Enter frontend image tag name
        required: true
        default: latest
      tag_backend:
        type: string
        description: Enter backend image tag name
        required: true
        default: latest

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      deployments: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4


      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
        with:
          cosign-release: 'v2.2.4'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{secrets.USERNAME}}
          password: ${{ secrets.PASSWORD }}

       ########################BACKEND######################################

      - name: Extract Docker backend metadata
        id: meta-backend
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend
          tags: ${{ github.event.inputs.tag_backend }}

      - name: Build and push Docker backend image
        id: build-and-push-backend
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: ./backend
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker backend image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta-backend.outputs.tags }}
          DIGEST: ${{ steps.build-and-push-backend.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
        
      - name: Render Deploy Backend
        run: curl "https://api.render.com/deploy/${{secrets.BACKEND_SERVICE_ID}}?key=nTefl6AW10o&imgURL=docker.io/${{env.IMAGE_NAME}}-backend:${{ github.event.inputs.tag_backend }}"


      - name: Extract Backend URL
        id: url_backend
        run: |
          response=$(curl --request GET \
          --url https://api.render.com/v1/services/${{secrets.BACKEND_SERVICE_ID}} \
          --header 'accept: application/json' \
          --header 'authorization: Bearer ${{secrets.RENDER_TOKEN}}')

          backend_url=$(echo "$response" | jq -r '.serviceDetails.url')

          echo "backend_url=$backend_url" >> $GITHUB_OUTPUT

      ################FRONTEND####################################


      - name: Extract Docker frontend metadata
        id: meta-frontend
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend
          tags: ${{ github.event.inputs.tag_frontend }}

      - name: Build and push Docker Frontend image
        id: build-and-push-frontend
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: ./frontend
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-frontend.outputs.tags }}
          labels: ${{ steps.meta-frontend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: 
            REACT_APP_API_URL= ${{ steps.url_backend.outputs.backend_url }}

      - name: Sign the published Docker frontend image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta-frontend.outputs.tags }}
          DIGEST: ${{ steps.build-and-push-frontend.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

      - name: Render Deploy Frontend
        run:  curl "https://api.render.com/deploy/${{secrets.FRONTEND_SERVICE_ID}}?key=GUdiiHbPF2k&imgURL=docker.io/${{env.IMAGE_NAME}}-frontend:${{ github.event.inputs.tag_frontend }}"